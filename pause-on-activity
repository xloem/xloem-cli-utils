#!/usr/bin/env bash

job="$!"
if ! [ -z "$*" ]
then
	if ps "$*" >/dev/null 2>&1
	then
		job="$*"
	else
		"$@" &
		job="$!"
	fi
fi
cmd="$(cat /proc/$job/cmdline | tr '\0' ' ')"
echo "Waiting for activity to pause $job $cmd"
if ! kill -CONT "$job"
then
	echo "Cannot send signals to '$job'"
	exit
fi

waitforkeyortimeout()
{
	inotifywait --timeout "$1" --quiet --quiet /dev/input/*
}

handle_int()
{
	kill -INT "$job"
	kill -CONT "$job"
}

trap handle_int INT

while true
do
	while ! waitforkeyortimeout $((60*60))
	do
		if ! ps "$job" >/dev/null 2>&1
		then
			break
		fi
	done

	# pause
	echo "$(date --iso=seconds) Pausing $cmd"
	if ! kill -STOP "$job" 2>/dev/null
	then
		echo "Terminated: $cmd"
		exit 0
	fi

	# wait for no keystrokes
	while waitforkeyortimeout 30
	do
		sleep 2
	done

	# resume
	echo "$(date --iso=seconds) Resuming $cmd"
	kill -CONT "$job"
done
